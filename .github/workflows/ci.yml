# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ main]
  pull_request:
    branches: [ main ]

jobs:
  build:
    strategy: 
      matrix:
        os: [ windows-latest, macos-latest, ubuntu-latest ]
        webotsUrl: [ "https://github.com/cyberbotics/webots/releases/download/R2021a/" ]
        include:
          - os: windows-latest
            webotsPkg: "webots-R2021a_setup.exe"
          - os: macos-latest
            webotsPkg: "webots-R2021a.dmg"
          - os: ubuntu-latest
            webotsPkg: "webots_2021a_amd64.deb"
    runs-on: ${{ matrix.os }}

    steps:
    - name: Cache Webots download
      id: cache-webots-download
      uses: actions/cache@v2
      with:
        path: ${{ matrix.webotsPkg }}
        key: ${{ matrix.os }}-webots-2021a-${{ matrix.webotsPkg }}

    - name: Download Webots
      if: steps.cache-webots-download.outputs.cache-hit != 'true'
      run: curl -L -O ${{ format('{0}{1}', matrix.webotsUrl, matrix.webotsPkg) }}

    - name: Install Webots (ubuntu-latest)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt install ./${{ matrix.webotsPkg }}

    - name: Install Webots (macos-latest)
      if: matrix.os == 'macos-latest'
      run: |
        mkdir ~/Mount
        hdiutil attach ${{ matrix.webotsPkg }} -mountpoint ~/Mount
        cp -r ~/Mount/Webots.app ~/Applications
        hdiutil detach ~/Mount
        rmdir ~/Mount

    - name: Install Webots (windows-latest)
      if: matrix.os == 'windows-latest'
      run: |
        ./${{ matrix.webotsPkg }} //VERYSILENT //SP- //SUPPRESSMSGBOXES //CURRENTUSER
      shell: bash

    - name: checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11

    - name: Build with Gradle (ubuntu-latest)
      if: matrix.os == 'ubuntu-latest'
      run: |
        export LIBGL_ALWAYS_SOFTWARE=true
        export WEBOTS_DISABLE_SAVE_SCREEN_PERSPECTIVE_ON_CLOSE=true
        xvfb-run -a webots --stdout --stderr --minimize --batch --mode=fast ./Webots/worlds/Empty.wbt &
        xvfb-run -a ./gradlew build --info --stacktrace

    - name: Build with Gradle (not ubuntu-latest)
      if: matrix.os != 'ubuntu-latest'
      run: |
        webots --stdout --stderr --minimize --batch --mode=fast &
        ./gradlew build --info --stacktrace
      shell: bash

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Compute next semantic version
      id: version
      uses: paulhatch/semantic-version@v3.2
      with:
        branch: "main"

    - name: Tag
      run: git tag ${{ steps.version.outputs.version_tag }}
    
    - name: Push
      run: git push origin ${{ steps.version.outputs.version_tag }}

    - name: Publish to Gradle Plugin Portal
      run: ./gradlew -p plugin publishPlugins -Pversion=${{ steps.version.outputs.version_tag }} -Pgradle.publish.key=${{ secrets.GRADLE_PUBLISH_KEY }} -Pgradle.publish.secret=${{ secrets.GRADLE_PUBLISH_SECRET }}

    # The USERNAME and TOKEN need to correspond to the credentials environment variables used in
    # the publishing section of your build.gradle
    - name: Publish to GitHub Packages
      run: ./gradlew -p plugin -Pversion=${{ steps.version.outputs.version_tag }} publish
      env:
        USERNAME: ${{ github.actor }}
        TOKEN: ${{ secrets.GITHUB_TOKEN }}