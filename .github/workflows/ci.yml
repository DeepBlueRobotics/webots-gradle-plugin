# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ main]
  pull_request:
    branches: [ main ]

jobs:
  build:
    strategy: 
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]

    runs-on: ${{ matrix.os }}

    steps:
    - name: checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8

    - name: Build with Gradle
      run: ./gradlew build
      shell: bash

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Compute next semantic version
      id: version
      uses: paulhatch/semantic-version@v3.2
      with:
        branch: "main"

    - name: Tag
      run: git tag ${{ steps.version.outputs.version_tag }}
    
    - name: Push
      run: git push origin ${{ steps.version.outputs.version_tag }}

    - name: Publish to Gradle Plugin Portal
      run: gradle publishPlugins -Pversion=${{ steps.version.outputs.version_tag }} -Pgradle.publish.key=${{ secrets.GRADLE_PUBLISH_KEY }} -Pgradle.publish.secret=${{ secrets.GRADLE_PUBLISH_SECRET }}

    # The USERNAME and TOKEN need to correspond to the credentials environment variables used in
    # the publishing section of your build.gradle
    - name: Publish to GitHub Packages
      run: gradle -Pversion=${{ steps.version.outputs.version_tag }} publish
      env:
        USERNAME: ${{ github.actor }}
        TOKEN: ${{ secrets.GITHUB_TOKEN }}